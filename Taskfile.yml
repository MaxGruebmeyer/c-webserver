version: '3'

tasks:
  run:
    vars:
      CFLAGS: '{{ default "-Wall -Wextra -Werror -ansi -pedantic" .CFLAGS }}'
      OUTPUT_FOLDER: '{{ default "bin" .OUTPUT_FOLDER }}'
    cmds:
      - task build OUTPUT_FOLDER='{{ .OUTPUT_FOLDER }}' CFLAGS='{{ .CFLAGS }}'
      - './{{ .OUTPUT_FOLDER }}/server.out'

  run-test:
    vars:
      CFLAGS: '{{ default "-Wall -Wextra -Werror -ansi -pedantic" .CFLAGS }}'
      OUTPUT_FOLDER: '{{ default "bin" .OUTPUT_FOLDER }}'
    cmds:
      - task build-test OUTPUT_FOLDER='{{ .OUTPUT_FOLDER }}' CFLAGS='{{ .CFLAGS }}'
      - './{{ .OUTPUT_FOLDER }}/client.out'

  build:
    platforms: [linux]
    sources:
      - src/*.c
    vars:
      CFLAGS: '{{ default "-Wall -Wextra -Werror -ansi -pedantic" .CFLAGS }}'
      OUTPUT_FOLDER: '{{ default "bin" .OUTPUT_FOLDER }}'
    cmds:
      - task build-shell -f MAIN_FILE="src/main.c" OUT_FILE="server.out"
    generates:
      - '{{ .OUTPUT_FOLDER }}/server.out'
      - '{{ .OUTPUT_FOLDER }}/*.o'

  build-test:
    platforms: [linux]
    sources:
      - src/*.c
      - exclude: src/main.c
      - test/test-client.c
    vars:
      CFLAGS: '{{ default "-Wall -Wextra -Werror -ansi -pedantic" .CFLAGS }}'
      OUTPUT_FOLDER: '{{ default "bin" .OUTPUT_FOLDER }}'
    cmds:
      - task build-shell -f MAIN_FILE="test/test-client.c" OUT_FILE="client.out"
    generates:
      - '{{ .OUTPUT_FOLDER }}/server.out'
      - '{{ .OUTPUT_FOLDER }}/*.o'

  build-shell:
    sources:
      - src/*.c
      - exclude: src/main.c
    vars:
      CFLAGS: '{{ default "-Wall -Wextra -Werror -ansi -pedantic" .CFLAGS }}'
      OUTPUT_FOLDER: '{{ default "bin" .OUTPUT_FOLDER }}'
      MAIN_FILE: '{{ default "src/main.c" .MAIN_FILE }}'
      OUT_FILE: '{{ default "server.out" .OUT_FILE }}'
    cmds:
      - rm -rf '{{ .OUTPUT_FOLDER }}'
      - mkdir '{{ .OUTPUT_FOLDER }}'
      - for: sources
        cmd: gcc {{ .CFLAGS }} "$(echo '{{ .ITEM }}' | sed -r 's/\\/\//')" -o "$(echo '{{ .ITEM }}' | sed -r 's/\\/\//' | sed -r 's/\.c$/\.o/' | sed 's/src/{{ .OUTPUT_FOLDER }}/')" -c
      - echo "Using {{ .MAIN_FILE }} as the main file"
      - gcc {{ .CFLAGS }} "$(echo '{{ .MAIN_FILE }}' | sed -r 's/\\/\//')" -o "$(echo '{{ .MAIN_FILE }}' | sed -r 's/\\/\//' | sed -r 's/\.c$/\.o/' | sed 's/src/{{ .OUTPUT_FOLDER }}/' | sed 's/test/{{ .OUTPUT_FOLDER }}/')" -c
      - gcc {{ .CFLAGS }} -o '{{ .OUTPUT_FOLDER }}/{{ .OUT_FILE }}' $(find './{{ .OUTPUT_FOLDER }}' -type f -iwholename '*.o' | xargs echo)
    generates:
      - '{{ .OUTPUT_FOLDER }}/server.out'
      - '{{ .OUTPUT_FOLDER }}/*.o'
